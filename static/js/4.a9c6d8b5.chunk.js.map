{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogsItem.js","components/Dialogs/Message/Message.js","components/Dialogs/Dialogs.js","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.js"],"names":["module","exports","DialogItem","props","path","id","className","classes","dialog","active","avatar","to","link","name","Message","message","maxLength10","maxLengthCreator","AddDialogsFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","TextArea","placeholder","validate","requiredField","Dialogs","dialogsElem","dialogsPage","dialogsData","map","key","messagesElem","messagesData","dialogs","dialogItems","messages","newDialog","formData","addMessage","newMessageText","mapStateToPropsForRedirect","state","isAuth","auth","DialogsContainer","compose","connect","dispatch","newMessage","addMessageCreator","Component","RedirectComponent","this","React"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,OAAS,wBAAwB,KAAO,sBAAsB,SAAW,0BAA0B,OAAS,wBAAwB,UAAY,6B,+FCelQC,EAZI,SAACC,GAElB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACE,yBAAKC,UAAWC,IAAQC,OAAS,IAAMD,IAAQE,QAC7C,yBAAKH,UAAWC,IAAQG,SACxB,kBAAC,IAAD,CAASC,GAAIP,EAAME,UAAWC,IAAQK,MAAOT,EAAMU,QCF1CC,EANC,SAACX,GACf,OACE,yBAAKG,UAAWC,IAAQC,QAASL,EAAMY,U,iCCGrCC,EAAcC,YAAiB,IAa/BC,EAAsBC,YAAU,CAAEC,KAAM,kBAAlBD,EAXL,SAAChB,GACtB,OACE,0BAAMkB,SAAUlB,EAAMmB,cACpB,6BACE,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUZ,KAAK,iBAAiBa,YAAY,qBAAqBC,SAAU,CAACC,IAAeZ,MAE/G,6BAAK,6CAmCIa,MA3Bf,SAAiB1B,GAEf,IAAI2B,EAAc3B,EAAM4B,YAAYC,YAAYC,KAAI,SAACzB,GAAD,OAAY,kBAAC,EAAD,CAAYK,KAAML,EAAOK,KAAMqB,IAAK1B,EAAOH,GAAIA,GAAIG,EAAOH,QAEtH8B,EAAehC,EAAM4B,YAAYK,aAAaH,KAAI,SAAClB,GAAD,OAAa,kBAAC,EAAD,CAASA,QAASA,EAAQA,QAASmB,IAAKnB,EAAQV,QAMnH,OACE,yBAAKC,UAAWC,IAAQ8B,SACtB,yBAAK/B,UAAWC,IAAQ+B,aACrBR,GAGH,yBAAKxB,UAAWC,IAAQgC,UACrBJ,GAGH,yBAAK7B,UAAWC,IAAQiC,WACtB,kBAACtB,EAAD,CAAqBG,SAfL,SAACoB,GACrBtC,EAAMuC,WAAWD,EAASE,sB,wDC3B1BC,EAA6B,SAACC,GAC9B,MAAO,CACHC,OAAQD,EAAME,KAAKD,S,OCcrBE,EAAmBC,YACvBC,aAfsB,SAACL,GACvB,MAAO,CACLd,YAAac,EAAMd,gBAII,SAACoB,GAC1B,MAAO,CACLT,WAAY,SAACU,GACXD,EAASE,YAAkBD,UDLD,SAACE,GAAe,IAEtCC,EAFqC,iLAInC,OAAKC,KAAKrD,MAAM2C,OAET,kBAACQ,EAAcE,KAAKrD,OAFI,kBAAC,IAAD,CAAUQ,GAAG,eAJT,GAEX8C,IAAMH,WAUtC,OAFqCJ,YAAQN,EAARM,CAAoCK,KCApDN,CAGvBpB,GAEamB","file":"static/js/4.a9c6d8b5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1FGin\",\"dialogItems\":\"Dialogs_dialogItems__3d4hL\",\"active\":\"Dialogs_active__1hDFG\",\"dialog\":\"Dialogs_dialog__CqaBh\",\"link\":\"Dialogs_link__3t5cW\",\"messages\":\"Dialogs_messages__11qMT\",\"avatar\":\"Dialogs_avatar__1zq4w\",\"newDialog\":\"Dialogs_newDialog__35Fj-\"};","import React from 'react';\r\nimport classes from './../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n\r\n  let path = \"/dialogs/\" + props.id;\r\n\r\n  return (\r\n    <div className={classes.dialog + ' ' + classes.active}>\r\n      <div className={classes.avatar}></div>\r\n      <NavLink to={path} className={classes.link}>{props.name}</NavLink>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport classes from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n  return (\r\n    <div className={classes.dialog}>{props.message}</div>\r\n  );\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport classes from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogsItem';\r\nimport Message from './Message/Message';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { requiredField, maxLengthCreator } from '../../utils/validators/validators';\r\nimport {TextArea} from '../common/FormsControls/FormsControls';\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddDialogsForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field component={TextArea} name='newMessageText' placeholder='Enter your message' validate={[requiredField, maxLength10]}></Field>\r\n      </div>\r\n      <div><button>Send</button></div>\r\n    </form>\r\n  );\r\n}\r\n\r\nconst AddDialogsFormRedux = reduxForm({ form: 'AddDialogsForm' })(AddDialogsForm);\r\n\r\n\r\nfunction Dialogs(props) {\r\n\r\n  let dialogsElem = props.dialogsPage.dialogsData.map((dialog) => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id} />);\r\n\r\n  let messagesElem = props.dialogsPage.messagesData.map((message) => <Message message={message.message} key={message.id} />);\r\n\r\n  const addNewMessage = (formData) => {\r\n    props.addMessage(formData.newMessageText);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.dialogs}>\r\n      <div className={classes.dialogItems}>\r\n        {dialogsElem}\r\n      </div>\r\n\r\n      <div className={classes.messages}>\r\n        {messagesElem}\r\n      </div>\r\n\r\n      <div className={classes.newDialog}>\r\n        <AddDialogsFormRedux onSubmit={addNewMessage} />\r\n      </div>\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />;\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let connectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return connectedAuthRedirectComponent;\r\n}\r\n\r\n","import { addMessageCreator } from '../../redux/dialogsReducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addMessage: (newMessage) => {\r\n      dispatch(addMessageCreator(newMessage));\r\n    }\r\n  }\r\n}\r\n\r\nconst DialogsContainer = compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n\r\nexport default DialogsContainer;"],"sourceRoot":""}