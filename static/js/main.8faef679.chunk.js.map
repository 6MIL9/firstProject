{"version":3,"sources":["redux/dialogsReducer.js","assets/img/noAvatar.jpg","components/common/Preloader/Preloader.module.css","assets/img/preloader.gif","API/Api.js","components/Header/Header.js","redux/authReducer.js","components/Header/HeaderContainer.js","components/Navbar/friends/friends.js","components/Navbar/Navbar.js","utils/objectHelpers.js","redux/usersReducer.js","components/common/Paginator/Paginator.js","components/Users/User.js","components/Users/Users.js","redux/userSelectors.js","components/Users/UsersContainer.js","components/Login/Login.js","redux/appReducer.js","redux/sidebarReducer.js","redux/reduxStore.js","App.js","serviceWorker.js","index.js","components/common/FormsControls/FormsControls.js","components/common/Preloader/Preloader.js","components/common/FormsControls/FormsControls.module.css","components/Users/Users.module.css","components/common/Paginator/Paginator.module.css","utils/validators/validators.js","components/Header/Header.module.css","components/Navbar/Navbar.module.css","components/Navbar/friends/friends.module.css","redux/profileReducer.js"],"names":["initialState","dialogsData","id","name","messagesData","message","addMessageCreator","newMessage","type","dialogsReducer","state","action","module","exports","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","follow","userId","post","unfollow","delete","userProfileAPI","getUserProfile","getStatus","updateStatus","status","put","authAPI","getAuthUserData","sentLoginData","email","password","rememberMe","logout","Header","props","className","classes","header","src","loginContainer","isAuth","login","onClick","to","setAuthUserData","payload","AuthUserData","dispatch","a","response","data","resultCode","authReducer","HeaderContainer","this","React","Component","connect","auth","Friends","avatar","Navbar","friendsElem","friendsData","map","friend","key","main","nav","item","link","activeClassName","activeLink","friendsContainer","friendList","updateObjectInArray","items","itemId","objPropName","newObjProps","u","FOLLOW","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","apiMethod","actionCreator","usersReducer","followed","totalCount","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","p","cn","selectedPage","pageNumber","e","User","user","photos","small","defaultPhoto","usersPhoto","disabled","some","Users","content","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersAPIComponent","pageNum","requestUsers","Preloader","UsersContainer","compose","page","bind","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","createField","requiredField","Input","formSummaryError","LoginContainer","messages","length","stopSubmit","_error","formData","initialized","appReducer","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","DialogsContainer","lazy","ProfileContainer","App","initializeApp","Suspense","fallback","render","path","AppContainer","withRouter","then","MainApp","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","FormControl","input","meta","touched","children","element","hasError","formControl","TextArea","restProps","child","placeholder","validators","component","text","validate","preloaderContainer","preloader","alt","value","maxLengthCreator","maxLength","ADD_POST","postsData","likesCnt","profile","addPostCreator","newPostText","setStatus","getProfile","newPost","postId"],"mappings":"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","file":"static/js/main.8faef679.chunk.js","sourcesContent":["const ADD_MESSAGE = 'dialogs/ADD-MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogsData: [\r\n        { id: 1, name: 'Dima' },\r\n        { id: 2, name: 'Andrey' },\r\n        { id: 3, name: 'Sveta' },\r\n        { id: 4, name: 'Sasha' },\r\n        { id: 5, name: 'Victor' },\r\n        { id: 6, name: 'Valera' }\r\n    ],\r\n    messagesData: [\r\n        { id: 1, message: 'Hi, how are you?' },\r\n        { id: 2, message: 'I love ds3!' },\r\n        { id: 3, message: 'Smoug' },\r\n        { id: 4, message: 'Smoug' },\r\n        { id: 5, message: 'Smoug' },\r\n    ],\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            let newMessage = {\r\n                id: 5,\r\n                message: action.newMessage,\r\n            };\r\n\r\n            return {\r\n                ...state,\r\n                messagesData: [...state.messagesData, newMessage],\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addMessageCreator = (newMessage) => {\r\n    return {\r\n        type: ADD_MESSAGE,\r\n        newMessage\r\n    }\r\n}\r\n\r\nexport default dialogsReducer;","module.exports = __webpack_public_path__ + \"static/media/noAvatar.851ed1f7.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloaderContainer\":\"Preloader_preloaderContainer__2V3MW\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.57e20929.gif\";","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': '4ba5285f-3df6-4c4d-979e-c5b6e9b6437e'\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 5) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`https://social-network.samuraijs.com/api/1.0/follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`https://social-network.samuraijs.com/api/1.0/follow/${userId}`)\r\n    }\r\n};\r\n\r\nexport const userProfileAPI = {\r\n    getUserProfile(userId) {\r\n        return instance.get(`profile/${userId}`)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, { status: status })\r\n    }\r\n};\r\n\r\nexport const authAPI = {\r\n    getAuthUserData() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    sentLoginData(email, password, rememberMe) {\r\n        return instance.post('/auth/login', {\r\n            email: email, password: password, rememberMe: rememberMe\r\n        });\r\n    },\r\n    logout() {\r\n        return instance.delete('/auth/login');\r\n    }\r\n};\r\n","import React from 'react';\r\nimport classes from './Header.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nlet Header = (props) => {\r\n  return (\r\n    <header className={classes.header}>\r\n      <img src='https://avatars.mds.yandex.net/get-pdb/2978932/0b12af51-bf52-47ad-89b3-431f0f0fc4ff/s1200?webp=false' />\r\n      <div className={classes.loginContainer}>\r\n        {props.isAuth ? <div>{props.login} - <button onClick={props.logout}>Logout</button></div> : <NavLink to='/login'>Login</NavLink>}\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;","import { authAPI } from '../API/Api';\r\nimport { stopSubmit } from 'redux-form';\r\n\r\nconst SET_AUTH_USER_DATA = 'auth/SET_AUTH_USER_DATA';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_AUTH_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => {\r\n    return {\r\n        type: SET_AUTH_USER_DATA,\r\n        payload: { userId, email, login, isAuth }\r\n    };\r\n}\r\n\r\nexport const AuthUserData = () => {\r\n    return async (dispatch) => {\r\n        let response = await authAPI.getAuthUserData();\r\n\r\n        if (response.data.resultCode === 0) {\r\n            let { id, email, login } = response.data.data;\r\n            dispatch(setAuthUserData(id, email, login, true));\r\n        }\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => {\r\n    return async (dispatch) => {\r\n        let response = await authAPI.sentLoginData(email, password, rememberMe);\r\n\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(AuthUserData());\r\n        } else {\r\n            let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Email or password is wrong';\r\n            dispatch(stopSubmit(\"login\", { _error: message }));\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const logout = () => {\r\n    return async (dispatch) => {\r\n        let response = await authAPI.logout();\r\n\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setAuthUserData(null, null, null, false));\r\n        }\r\n    }\r\n}\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../../redux/authReducer';\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <Header {...this.props} />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  login: state.auth.login,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(HeaderContainer);","import React from 'react';\r\nimport classes from './friends.module.css';\r\n\r\nfunction Friends(props) {\r\n    return (\r\n        <div>\r\n            <div className={classes.avatar}></div>\r\n            <div className={classes.name}>{props.name}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Friends;\r\n","import React from 'react';\r\nimport classes from './Navbar.module.css';\r\nimport Friends from './friends/friends';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nfunction Navbar(props) {\r\n\r\n    let friendsElem = props.friendsData.map( (friend) => <Friends name={friend.name} key={friend.id} id={friend.id} />); \r\n\r\n    return (\r\n        <div className={classes.main}>\r\n            <nav className={classes.nav}>\r\n                <div className={classes.item}>\r\n                    <NavLink to=\"/profile\" className={classes.link} activeClassName={classes.activeLink}>Profile</NavLink>\r\n                </div>\r\n\r\n                <div className={classes.item}>\r\n                    <NavLink to=\"/dialogs\" className={classes.link} activeClassName={classes.activeLink}>Messages</NavLink>\r\n                </div>\r\n\r\n                <div className={classes.item}>\r\n                    <NavLink to=\"/News\" className={classes.link} activeClassName={classes.activeLink}>News</NavLink>\r\n                </div>\r\n\r\n                <div className={classes.item}>\r\n                    <NavLink to=\"/Users\" className={classes.link} activeClassName={classes.activeLink}>Users</NavLink>\r\n                </div>\r\n\r\n                <div className={classes.item}>\r\n                    <NavLink to=\"/Music\" className={classes.link} activeClassName={classes.activeLink}>Music</NavLink>\r\n                </div>\r\n\r\n                <div className={classes.item}>\r\n                    <NavLink to=\"/Settings\" className={classes.link} activeClassName={classes.activeLink}>Settings</NavLink>\r\n                </div>\r\n            </nav>\r\n\r\n            <div className={classes.friendsContainer}>\r\n                <h2>Friends</h2>\r\n                <div className={classes.friendList}>\r\n                    {friendsElem}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navbar;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}","import { usersAPI } from '../API/Api';\r\nimport {updateObjectInArray} from '../utils/objectHelpers'\r\n\r\nconst FOLLOW = 'users/FOLLOW';\r\nconst UNFOLLOW = 'users/UNFOLLOW';\r\nconst SET_USERS = 'users/SET_USERS';\r\nconst SET_CURRENT_PAGE = 'users/SET_CURRENT_PAGE';\r\nconst SET_TOTAL_COUNT = 'users/SET_TOTAL_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'users/TOOGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'users/TOOGLE_IS_FOLLOWING_PROGRESS';\r\n\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [1, 2]\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case FOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: true })\r\n            };\r\n        }\r\n\r\n        case UNFOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: false })\r\n            };\r\n        }\r\n\r\n        case SET_USERS: {\r\n            return { ...state, users: action.users };\r\n        }\r\n\r\n        case SET_CURRENT_PAGE: {\r\n            return { ...state, currentPage: action.currentPage };\r\n        }\r\n\r\n        case SET_TOTAL_COUNT: {\r\n            return { ...state, totalUsersCount: action.totalCount };\r\n        }\r\n\r\n        case TOGGLE_IS_FETCHING: {\r\n            return { ...state, isFetching: action.isFetching };\r\n        }\r\n\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state, followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => {\r\n    return {\r\n        type: FOLLOW,\r\n        userId\r\n    }\r\n}\r\n\r\nexport const unfollowSuccess = (userId) => {\r\n    return {\r\n        type: UNFOLLOW,\r\n        userId\r\n    }\r\n}\r\n\r\nexport const setUsers = (users) => {\r\n    return {\r\n        type: SET_USERS,\r\n        users\r\n    }\r\n}\r\n\r\nexport const setCurrentPage = (currentPage) => {\r\n    return {\r\n        type: SET_CURRENT_PAGE,\r\n        currentPage\r\n    }\r\n}\r\n\r\nexport const setUsersTotalCount = (totalCount) => {\r\n    return {\r\n        type: SET_TOTAL_COUNT,\r\n        totalCount\r\n    }\r\n}\r\n\r\nexport const toggleIsFetching = (isFetching) => {\r\n    return {\r\n        type: TOGGLE_IS_FETCHING,\r\n        isFetching\r\n    }\r\n}\r\nexport const toggleFollowingProgress = (isFetching, userId) => {\r\n    return {\r\n        type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n        isFetching,\r\n        userId\r\n    }\r\n}\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n\r\n        let response = await usersAPI.getUsers(page, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(response.data.items));\r\n        dispatch(setUsersTotalCount(response.data.totalCount));\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId)\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n    }\r\n}\r\n\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n\r\n    }\r\n}\r\n\r\nexport default usersReducer;\r\n\r\n","import React, { useState } from 'react';\r\nimport classes from './Paginator.module.css';\r\nimport cn from \"classnames\";\r\n\r\nlet Paginator = ({ totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 20 }) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return <div className={classes.pages}>\r\n        {portionNumber > 1 &&\r\n            <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button>}\r\n\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n            .map((p) => {\r\n                return <span className={cn({\r\n                    [classes.selectedPage]: currentPage === p\r\n                }, classes.pageNumber)}\r\n                    key={p}\r\n                    onClick={(e) => {\r\n                        onPageChanged(p);\r\n                    }}>{p}</span>\r\n            })}\r\n        {portionCount > portionNumber &&\r\n            <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button>}\r\n\r\n\r\n    </div>\r\n}\r\n\r\nexport default Paginator;\r\n\r\n","import React from 'react';\r\nimport classes from './Users.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport defaultPhoto from '../../assets/img/noAvatar.jpg';\r\n\r\nlet User = ({ user, followingInProgress, follow, unfollow }) => {\r\n    return (\r\n        <div>\r\n            <span>\r\n                <div>\r\n                    <NavLink to={'/profile/' + user.id}>\r\n                        <img src={user.photos.small != null ? user.photos.small : defaultPhoto} className={classes.usersPhoto} />\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    {user.followed\r\n                        ? <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => { unfollow(user.id) }}>unfollow</button>\r\n                        : <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => { follow(user.id) }}>Follow</button>}\r\n                </div>\r\n            </span>\r\n\r\n\r\n            <span>\r\n                <span>\r\n                    <div>{user.name}</div>\r\n                    <div>{user.status}</div>\r\n\r\n                </span>\r\n                <span>\r\n                    <div>{'user.location.country'}</div>\r\n                    <div>{'user.location.city'}</div>\r\n                </span>\r\n            </span>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default User;\r\n","import React from 'react';\r\nimport classes from './Users.module.css';\r\nimport Paginator from '../common/Paginator/Paginator';\r\nimport User from './User';\r\n\r\nlet Users = ({ currentPage, onPageChanged, totalUsersCount, pageSize, users, ...props }) => {\r\n    return (\r\n        <div className={classes.content}>\r\n\r\n            <Paginator currentPage={currentPage} onPageChanged={onPageChanged} totalItemsCount={totalUsersCount} pageSize={pageSize} />\r\n            {\r\n                users.map((u) => <User user={u}\r\n                    key={u.id}\r\n                    followingInProgress={props.followingInProgress}\r\n                    unfollow={props.unfollow}\r\n                    follow={props.follow} />)\r\n            }\r\n\r\n        </div >\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default Users;\r\n\r\n","import { createSelector } from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n    return users.filter(u => true);\r\n});\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}   \r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n}","import React from 'react';\r\nimport { followSuccess, setCurrentPage, unfollowSuccess, requestUsers, follow, unfollow, toggleFollowingProgress } from '../../redux/usersReducer';\r\nimport { connect } from 'react-redux';\r\nimport Users from './Users';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport { compose } from 'redux';\r\nimport { getUsers, getPageSize, getTotalUsersCount, getCurrentPage, getIsFetching, getFollowingInProgress } from '../../redux/userSelectors'\r\n\r\n\r\nclass UsersAPIComponent extends React.Component {\r\n\r\n  componentDidMount() {\r\n    let {currentPage, pageSize} = this.props;\r\n    this.props.requestUsers(currentPage, pageSize);\r\n  }\r\n\r\n  onPageChanged = (pageNum) => {\r\n    let {pageSize} = this.props;\r\n    this.props.requestUsers(pageNum, pageSize);\r\n  }\r\n  render() {\r\n    return <>\r\n      {this.props.isFetching ? <Preloader /> : null}\r\n      < Users totalUsersCount={this.props.totalUsersCount}\r\n        pageSize={this.props.pageSize}\r\n        currentPage={this.props.currentPage}\r\n        onPageChanged={this.onPageChanged}\r\n        users={this.props.users}\r\n        unfollowSuccess={this.props.unfollowSuccess}\r\n        followSuccess={this.props.followSuccess}\r\n        follow={this.props.follow}\r\n        unfollow={this.props.unfollow}\r\n        followingInProgress={this.props.followingInProgress}\r\n      />\r\n    </>\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    users: getUsers(state),\r\n    pageSize: getPageSize(state),\r\n    totalUsersCount: getTotalUsersCount(state),\r\n    currentPage: getCurrentPage(state),\r\n    isFetching: getIsFetching(state),\r\n    followingInProgress: getFollowingInProgress(state)\r\n  }\r\n}\r\n\r\nconst UsersContainer = compose(\r\n  connect(mapStateToProps, { followSuccess, unfollowSuccess, setCurrentPage, requestUsers, follow, unfollow, toggleFollowingProgress }),\r\n)(UsersAPIComponent);\r\n\r\nexport default UsersContainer;  \r\n","import React from 'react';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { login } from '../../redux/authReducer';\r\nimport { connect } from 'react-redux';\r\nimport { Input, createField } from '../common/FormsControls/FormsControls';\r\nimport { requiredField } from '../../utils/validators/validators';\r\nimport { Redirect } from 'react-router-dom';\r\nimport classes from \"../common/FormsControls/FormsControls.module.css\";\r\n\r\nconst LoginForm = ({ handleSubmit, error }) => {\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit}>\r\n\r\n                {createField('Email', 'email', [requiredField], Input)}\r\n                {createField('Password', 'password', [requiredField], Input, { type: \"password\" })}\r\n                {createField(null, 'rememberMe', [], Input, { type: \"checkbox\" }, 'remember me')}\r\n\r\n                {(error) && <div className={classes.formSummaryError}>\r\n                    {error}\r\n                </div>}\r\n\r\n                <div>\r\n                    <button>Login</button>\r\n                </div>\r\n            </form>\r\n        </div >\r\n    );\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm);\r\n\r\nconst Login = (props) => {\r\n\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'} />\r\n    }\r\n\r\n    return <>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} />\r\n    </>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nconst LoginContainer = connect(mapStateToProps, { login })(Login);\r\n\r\nexport default LoginContainer;","import {AuthUserData} from './authReducer';\r\n\r\nconst INITIALIZED_SUCCESS = 'app/INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => {\r\n    return {\r\n        type: INITIALIZED_SUCCESS\r\n    };\r\n}\r\n\r\nexport const initializeApp = () => {\r\n    return (dispatch) => {\r\n        let promise = dispatch(AuthUserData());\r\n        promise.then( () => {\r\n            dispatch(initializedSuccess());\r\n        })\r\n    }\r\n}\r\n\r\nexport default appReducer;","let initialState = {\r\n    friendsData: [\r\n        { id: 1, name: 'Dima' },\r\n        { id: 2, name: 'Andrey' },\r\n        { id: 3, name: 'Sveta' }\r\n    ]\r\n};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n};\r\n\r\nexport default sidebarReducer;","import { applyMiddleware, createStore, combineReducers, compose } from 'redux';\r\nimport profileReducer from './profileReducer';\r\nimport dialogsReducer from './dialogsReducer';\r\nimport sidebarReducer from './sidebarReducer';\r\nimport usersReducer from './usersReducer';\r\nimport authReducer from './authReducer';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport appReducer from './appReducer';\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nexport default store;","import React from 'react';\nimport './App.css';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Navbar from './components/Navbar/Navbar';\nimport { Route, BrowserRouter, withRouter } from \"react-router-dom\";\nimport UsersContainer from './components/Users/UsersContainer';\nimport Login from './components/Login/Login';\nimport { initializeApp } from './redux/appReducer';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport Preloader from './components/common/Preloader/Preloader';\nimport { Provider } from 'react-redux';\nimport store from './redux/reduxStore';\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\n\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\n\nclass App extends React.Component {\n\n  componentDidMount() {\n    this.props.initializeApp();\n  }\n\n  render() {\n\n    if (this.props.initialized === false) {\n      return <Preloader />\n    } else {\n      return (\n        <BrowserRouter>\n          <div className=\"app-wrapper\">\n            <HeaderContainer />\n            <Navbar friendsData={this.props.friendsData} />\n            <div className=\"app-wrapper-content\">\n              <React.Suspense fallback={<div><Preloader /></div>}>\n                <Route render={() => (<DialogsContainer />)} path='/dialogs' />\n                <Route render={() => (<ProfileContainer />)} path='/profile/:userId?' />\n              </React.Suspense>\n              <Route render={() => (<UsersContainer />)} path=\"/Users\" />\n              <Route render={() => (<Login />)} path=\"/Login\" />\n            </div>\n          </div>\n        </BrowserRouter >\n      );\n    }\n  }\n}\nconst mapStateToProps = (state) => ({\n  friendsData: state.sidebar.friendsData,\n  initialized: state.app.initialized\n})\n\n\n\nlet AppContainer = compose(withRouter, connect(mapStateToProps, { initializeApp }))(App);\n\nconst MainApp = (props) => {\n  return <BrowserRouter>\n    <Provider store={store}>\n      <AppContainer store={store} />\n    </Provider>\n  </BrowserRouter>\n}\n\nexport default MainApp;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport MainApp from './App'; \nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    \n    <MainApp/>, document.getElementById('root'));\n\n\nserviceWorker.unregister();","import React from 'react';\r\nimport classes from \"./FormsControls.module.css\";\r\nimport { Field } from 'redux-form';\r\n\r\nconst FormControl = ({ input, meta: { touched, error }, element, children }) => {\r\n    let hasError = touched && error;\r\n\r\n    return (\r\n        <div className={classes.formControl + \" \" + (hasError ? classes.error : '')}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const TextArea = (props) => {\r\n\r\n    const { input, meta, child, ...restProps } = props;\r\n\r\n\r\n    return (\r\n        <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n    );\r\n}\r\n\r\nexport const Input = (props) => {\r\n\r\n    const { input, meta, child, ...restProps } = props;\r\n\r\n\r\n    return (\r\n        <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n    );\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = '') => {\r\n    return (\r\n        <div>\r\n            <Field placeholder={placeholder} name={name} component={component} validate={validators} {...props} /> {text}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport classes from './Preloader.module.css';\r\nimport preloader from '../../../assets/img/preloader.gif';\r\n\r\nlet Preloader = (props) => {\r\n    return (\r\n        <div className={classes.preloaderContainer}>\r\n            <img src={preloader} alt='' />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3W_aT\",\"error\":\"FormsControls_error__1d-HF\",\"formSummaryError\":\"FormsControls_formSummaryError__h7aV1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersPhoto\":\"Users_usersPhoto__1t4Qx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pages\":\"Paginator_pages__12xNb\",\"pageNumber\":\"Paginator_pageNumber__1_ZIT\",\"selectedPage\":\"Paginator_selectedPage__10GP9\"};","export const requiredField = (value) => {\r\n    if (value) {\r\n        return undefined;\r\n    } else {\r\n        return 'field is required';\r\n    }\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value && value.length > maxLength) {\r\n        return `max length is ${maxLength} symbols`;\r\n    } else {\r\n        return undefined;\r\n    }\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3P2XW\",\"loginContainer\":\"Header_loginContainer__2SwJL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Navbar_main__1MWUP\",\"nav\":\"Navbar_nav__uVYWz\",\"item\":\"Navbar_item__1UyWF\",\"link\":\"Navbar_link__3_4cn\",\"activeLink\":\"Navbar_activeLink__29maX\",\"friendsContainer\":\"Navbar_friendsContainer__3RMis\",\"friendList\":\"Navbar_friendList__3DLDI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"friends_avatar__18Xbm\",\"name\":\"friends_name__1ewfj\"};","import { userProfileAPI } from '../API/Api';\r\n\r\nconst ADD_POST = 'profile/ADD-POST';\r\nconst SET_USER_PROFILE = 'profile/SET_USER_PROFILE';\r\nconst SET_STATUS = 'profile/SET_STATUS';\r\nconst DELETE_POST = 'profile/DELETE_POST';\r\n\r\n\r\nlet initialState = {\r\n    postsData: [\r\n        { id: 1, post: 'Hi, how are you?', likesCnt: 3 },\r\n        { id: 2, post: 'Nice day to walk', likesCnt: 2 },\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 6,\r\n                post: action.newPostText,\r\n                likesCnt: 0\r\n            };\r\n\r\n            return {\r\n                ...state,\r\n                postsData: [...state.postsData, newPost],\r\n            };\r\n        }\r\n\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                postsData: state.postsData.filter(p => p.id != action.postId)\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostCreator = (newPostText) => {\r\n    return {\r\n        type: ADD_POST,\r\n        newPostText\r\n    }\r\n}\r\n\r\nexport const setUserProfile = (profile) => {\r\n    return {\r\n        type: SET_USER_PROFILE,\r\n        profile\r\n    }\r\n}\r\n\r\nexport const setStatus = (status) => {\r\n    return {\r\n        type: SET_STATUS,\r\n        status\r\n    }\r\n}\r\n\r\nexport const deletePost = (postId) => {\r\n    return {\r\n        type: DELETE_POST,\r\n        postId\r\n    }\r\n}\r\n\r\nexport const getProfile = (userId) => {\r\n    return async (dispatch) => {\r\n        let response = await userProfileAPI.getUserProfile(userId);\r\n        dispatch(setUserProfile(response.data));\r\n    }\r\n}\r\n\r\n\r\nexport const getStatus = (userId) => {\r\n    return async (dispatch) => {\r\n        let response = await userProfileAPI.getStatus(userId)\r\n        dispatch(setStatus(response.data));\r\n    }\r\n}\r\n\r\n\r\nexport const updateStatus = (status) => {\r\n    return async (dispatch) => {\r\n        let response = await userProfileAPI.updateStatus(status)\r\n\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setStatus(status));\r\n        }\r\n    }\r\n}\r\n\r\nexport default profileReducer;"],"sourceRoot":""}