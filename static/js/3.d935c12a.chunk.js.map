{"version":3,"sources":["components/Profile/Profile.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHook.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js"],"names":["module","exports","ProfileStatusWithHook","props","useState","editMode","setEditMode","status","setstatus","useEffect","onDoubleClick","onBlur","updateStatus","autoFocus","onChange","e","currentTarget","value","ProfileInfo","profile","className","classes","description","src","photos","small","alt","Preloader","Post","item","msg","likesCnt","maxLength10","maxLengthCreator","AddNewFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","TextArea","name","placeholder","validate","requiredField","MyPosts","postsElem","postsData","map","post","postsBlock","formData","addPost","newPostText","posts","MyPostsContainer","connect","state","profilePage","dispatch","addPostCreator","Profile","content","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getProfile","getStatus","React","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.d935c12a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__2OXCc\",\"item\":\"Profile_item__2dVWy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"ProfileInfo_description__FsYTp\",\"img\":\"ProfileInfo_img__3wawv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__ZW1cd\",\"posts\":\"MyPosts_posts__2MEZh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2McOH\"};","import React, { useState, useEffect } from 'react';\r\n\r\nconst ProfileStatusWithHook = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setstatus] = useState(props.status);\r\n\r\n    useEffect(() => { \r\n        setstatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setstatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div onDoubleClick={activateEditMode}>\r\n                    <span >{props.status || '-------'}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onBlur={deactivateEditMode} autoFocus={true} onChange={onStatusChange} value={status}></input>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileStatusWithHook;","import React from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatusWithHook from './ProfileStatusWithHook';\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n  if (!profile) {\r\n    return <Preloader />\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.description}>\r\n        <img src={profile.photos.small} alt='фото отсутсвует' />\r\n\r\n        <ProfileStatusWithHook status={status} updateStatus={updateStatus}/>\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport classes from './Post.module.css';\r\n\r\nfunction Post(props) {\r\n  return (\r\n    <div className={classes.item}>\r\n      <img src=\"https://avatars.mds.yandex.net/get-pdb/1751508/6ab1874b-761a-4641-9586-8a242d22b828/s1200\"></img>\r\n      {props.msg}\r\n      <div>\r\n        <span>Like {props.likesCnt}</span>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport classes from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { requiredField, maxLengthCreator } from '../../../utils/validators/validators';\r\nimport { TextArea } from '../../common/FormsControls/FormsControls';\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nfunction MyPosts(props) {\r\n\r\n  let postsElem = props.postsData.map((post) => <Post msg={post.post} likesCnt={post.likesCnt} />);\r\n\r\n  let onAddPost = (formData) => {\r\n    props.addPost(formData.newPostText)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.postsBlock}>\r\n      <h3>My posts</h3>\r\n      <AddNewFormRedux onSubmit={onAddPost} />\r\n      <div className={classes.posts}>\r\n        {postsElem}\r\n      </div>\r\n    </div >\r\n\r\n  );\r\n}\r\n\r\nconst AddNewForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field component={TextArea} name='newPostText' placeholder='Enter your post' validate={[requiredField, maxLength10]}></Field>\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nconst AddNewFormRedux = reduxForm({ form: 'AddPostForm' })(AddNewForm);\r\n\r\nexport default MyPosts;","import MyPosts from './MyPosts';\r\nimport { addPostCreator } from '../../../redux/profileReducer';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n return {\r\n  postsData: state.profilePage.postsData\r\n }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostCreator(newPostText));\r\n    }\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;  ","import React from 'react';\r\nimport classes from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nfunction Profile(props) {\r\n  return (\r\n    <div className={classes.content}>\r\n      <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getProfile, getStatus, updateStatus } from '../../redux/profileReducer';\r\nimport { withRouter, Redirect } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n\r\n      if (!userId) {\r\n        this.props.history.push('/login');\r\n      }\r\n    }\r\n\r\n    this.props.getProfile(userId);\r\n\r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getProfile, getStatus, updateStatus }),\r\n  withRouter,\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}